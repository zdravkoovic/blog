name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/v1/auth/register
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: zbailey@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'Must be at least 6 characters.'
        required: true
        example: '-0pBNvYgxw'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: b
      email: zbailey@example.net
      password: '-0pBNvYgxw'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/auth/login
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: gbailey@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: '|]|{+-'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      email: gbailey@example.net
      password: '|]|{+-'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/logout
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/posts
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":200,"success":true,"message":"Success","data":{"current_page":1,"data":[{"id":37,"user_id":67,"category_id":7,"title":"Odit enim labore error.","slug":"odit-enim-labore-error","content":"Et doloremque sit rem ullam voluptatum. Reiciendis eum esse nemo reiciendis. Et tempore aut minima consequuntur ducimus. Molestias velit aut qui rem.\n\nIure dignissimos doloribus atque ducimus rem culpa. Ullam voluptates nam dicta consectetur itaque. Et eaque autem impedit impedit et deleniti.\n\nCupiditate delectus assumenda non beatae magnam doloribus quidem doloremque. Omnis sed ipsa dolorem rerum non voluptatibus. Nihil qui repellendus esse reprehenderit exercitationem.\n\nOfficia ut perferendis amet tenetur sit. Eum delectus et sed sint amet ex illum occaecati. Aut molestias adipisci veniam sed. Soluta et quia quis laboriosam aperiam consequatur. Dignissimos iste consequatur non molestias distinctio sapiente.\n\nVitae rem fugit dolorem explicabo. At eveniet a ea reprehenderit. Praesentium sed velit rerum et velit sed nobis.\n\nVeritatis assumenda unde voluptatem iure nostrum. Quos magnam ut ad ut nesciunt numquam. Culpa expedita ut pariatur sequi.","created_at":"2025-05-31T22:17:37.000000Z","updated_at":"2025-05-31T22:17:37.000000Z","comments_count":0,"likes_count":0,"author":{"id":67,"name":"Prof. Agustin Simonis Jr.","avatar":"storage\/avatars\/avatar.png","avatar_url":"http:\/\/localhost\/storage\/avatars\/avatar.png"},"tags":[]},{"id":38,"user_id":68,"category_id":8,"title":"Possimus rem repudiandae cupiditate magnam repudiandae quo.","slug":"possimus-rem-repudiandae-cupiditate-magnam-repudiandae-quo","content":"Harum consequuntur dolor maiores quisquam officia. Et excepturi id laudantium quibusdam ex distinctio. Aperiam repellat consequatur veniam totam.\n\nSaepe voluptatem magnam nam nesciunt odio velit necessitatibus. Sit excepturi ipsam numquam optio. Accusamus dicta alias officia perferendis necessitatibus expedita. Quia blanditiis incidunt esse quia ut.\n\nConsequatur quos aut libero libero cumque eum iusto blanditiis. Id quos recusandae quia quo accusantium optio. Quae ut incidunt mollitia odio sunt. Dolorum assumenda unde labore beatae tempore.\n\nAccusamus modi voluptas sit est velit ea. Ut optio earum soluta non totam itaque qui sint. Aut omnis qui at debitis sit non. Ipsa repellendus libero labore ut enim mollitia nihil sed.\n\nAdipisci minima eius nihil qui libero architecto. Maiores ea voluptatem non natus nihil quis. Cumque et non aliquid iusto.\n\nAccusamus suscipit minus dicta autem. Iusto autem sunt qui dolor aperiam quaerat ex. Dignissimos ullam quasi asperiores.","created_at":"2025-05-31T22:17:37.000000Z","updated_at":"2025-05-31T22:17:37.000000Z","comments_count":0,"likes_count":0,"author":{"id":68,"name":"Eddie Haley","avatar":"storage\/avatars\/avatar.png","avatar_url":"http:\/\/localhost\/storage\/avatars\/avatar.png"},"tags":[]},{"id":39,"user_id":69,"category_id":9,"title":"Minima sit molestiae molestiae optio.","slug":"minima-sit-molestiae-molestiae-optio","content":"Eaque sit incidunt laudantium. Modi qui excepturi quis doloribus quia eos blanditiis enim. Rerum iste quisquam tempore velit et a officiis dolor. Qui esse omnis explicabo qui voluptates vel.\n\nNatus distinctio neque omnis iure. Dolor illum harum facilis accusantium et voluptatem enim voluptatibus. Quis natus nisi error.\n\nIllum quidem et voluptas ut maxime. Quis quam neque aperiam error tenetur adipisci sed.\n\nLibero dolor perferendis nobis corrupti. Doloremque nisi perspiciatis sit et.\n\nA id molestias iure. Dolore natus recusandae quasi ut sint temporibus rerum. Eum sit libero vero et quis.\n\nAdipisci sed eos quasi temporibus et ipsum et qui. Necessitatibus modi nobis magni reiciendis dolorem sit eum. Placeat minus repellendus fugit eaque nisi. Nobis quidem expedita enim molestiae aliquid praesentium aut reiciendis.","created_at":"2025-05-31T22:17:37.000000Z","updated_at":"2025-05-31T22:17:37.000000Z","comments_count":0,"likes_count":0,"author":{"id":69,"name":"Agnes Hodkiewicz","avatar":"storage\/avatars\/avatar.png","avatar_url":"http:\/\/localhost\/storage\/avatars\/avatar.png"},"tags":[]},{"id":36,"user_id":4,"category_id":1,"title":"Ke\u0161 post","slug":"kes-post","content":"Ovo je post za proveru ke\u0161a","created_at":"2025-05-29T12:53:15.000000Z","updated_at":"2025-05-29T12:53:15.000000Z","comments_count":0,"likes_count":0,"author":{"id":4,"name":"Goran Zoran","avatar":"storage\/images\/IMG_1801.jpg","avatar_url":"http:\/\/localhost\/storage\/images\/IMG_1801.jpg"},"tags":[]},{"id":35,"user_id":4,"category_id":1,"title":"Post od Gorana Zorana","slug":"post-od-gorana-zorana","content":"Moze","created_at":"2025-05-23T18:28:51.000000Z","updated_at":"2025-05-23T18:28:51.000000Z","comments_count":0,"likes_count":0,"author":{"id":4,"name":"Goran Zoran","avatar":"storage\/images\/IMG_1801.jpg","avatar_url":"http:\/\/localhost\/storage\/images\/IMG_1801.jpg"},"tags":[{"name":"MySQL","pivot":{"post_id":35,"tag_id":5,"tagged_by_user_id":4}}]},{"id":34,"user_id":1,"category_id":1,"title":"Nesto cudno","slug":"nesto-cudno","content":"Nesto cudno se desava","created_at":"2025-05-23T17:50:11.000000Z","updated_at":"2025-05-23T17:50:11.000000Z","comments_count":0,"likes_count":0,"author":{"id":1,"name":"Nikola Zdravkovic","avatar":"storage\/images\/DSC_0563.jpg","avatar_url":"http:\/\/localhost\/storage\/images\/DSC_0563.jpg"},"tags":[{"name":"Laravel","pivot":{"post_id":34,"tag_id":2,"tagged_by_user_id":1}}]},{"id":33,"user_id":1,"category_id":1,"title":"Sumnjivo lice","slug":"sumnjivo-lice","content":"Sumnjivo lice","created_at":"2025-05-23T17:48:50.000000Z","updated_at":"2025-05-23T17:48:50.000000Z","comments_count":0,"likes_count":0,"author":{"id":1,"name":"Nikola Zdravkovic","avatar":"storage\/images\/DSC_0563.jpg","avatar_url":"http:\/\/localhost\/storage\/images\/DSC_0563.jpg"},"tags":[{"name":"PHP","pivot":{"post_id":33,"tag_id":1,"tagged_by_user_id":1}}]},{"id":32,"user_id":1,"category_id":1,"title":"Skoro pa gotovo","slug":"skoro-pa-gotovo","content":"Novi fosili recimi tiho","created_at":"2025-05-23T15:45:36.000000Z","updated_at":"2025-05-23T15:45:36.000000Z","comments_count":0,"likes_count":0,"author":{"id":1,"name":"Nikola Zdravkovic","avatar":"storage\/images\/DSC_0563.jpg","avatar_url":"http:\/\/localhost\/storage\/images\/DSC_0563.jpg"},"tags":[{"name":"Gitara","pivot":{"post_id":32,"tag_id":6,"tagged_by_user_id":1}}]},{"id":31,"user_id":1,"category_id":1,"title":"Sumnjivo je i dalje","slug":"sumnjivo-je-i-dalje","content":"Mozda ce da radi","created_at":"2025-05-23T15:44:21.000000Z","updated_at":"2025-05-23T15:44:21.000000Z","comments_count":0,"likes_count":0,"author":{"id":1,"name":"Nikola Zdravkovic","avatar":"storage\/images\/DSC_0563.jpg","avatar_url":"http:\/\/localhost\/storage\/images\/DSC_0563.jpg"},"tags":[{"name":"Laravel","pivot":{"post_id":31,"tag_id":2,"tagged_by_user_id":1}}]},{"id":30,"user_id":1,"category_id":1,"title":"Sumnjivo je","slug":"sumnjivo-je","content":"Mozda ce da radi","created_at":"2025-05-23T15:41:59.000000Z","updated_at":"2025-05-23T15:41:59.000000Z","comments_count":0,"likes_count":0,"author":{"id":1,"name":"Nikola Zdravkovic","avatar":"storage\/images\/DSC_0563.jpg","avatar_url":"http:\/\/localhost\/storage\/images\/DSC_0563.jpg"},"tags":[{"name":"Laravel","pivot":{"post_id":30,"tag_id":2,"tagged_by_user_id":1}},{"name":"Vue.js","pivot":{"post_id":30,"tag_id":4,"tagged_by_user_id":1}}]}],"first_page_url":"http:\/\/localhost\/api\/v1\/posts?page=1","from":1,"last_page":4,"last_page_url":"http:\/\/localhost\/api\/v1\/posts?page=4","links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/localhost\/api\/v1\/posts?page=1","label":"1","active":true},{"url":"http:\/\/localhost\/api\/v1\/posts?page=2","label":"2","active":false},{"url":"http:\/\/localhost\/api\/v1\/posts?page=3","label":"3","active":false},{"url":"http:\/\/localhost\/api\/v1\/posts?page=4","label":"4","active":false},{"url":"http:\/\/localhost\/api\/v1\/posts?page=2","label":"Next &raquo;","active":false}],"next_page_url":"http:\/\/localhost\/api\/v1\/posts?page=2","path":"http:\/\/localhost\/api\/v1\/posts","per_page":10,"prev_page_url":null,"to":10,"total":39}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/posts/tags
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":200,"success":true,"message":"Success","data":[{"id":1,"name":"PHP","slug":"php","created_at":"2025-05-11T14:08:16.000000Z","updated_at":"2025-05-11T14:08:16.000000Z"},{"id":2,"name":"Laravel","slug":"laravel","created_at":"2025-05-11T14:08:16.000000Z","updated_at":"2025-05-11T14:08:16.000000Z"},{"id":3,"name":"JavaScript","slug":"javascript","created_at":"2025-05-11T14:08:16.000000Z","updated_at":"2025-05-11T14:08:16.000000Z"},{"id":4,"name":"Vue.js","slug":"vue-js","created_at":"2025-05-11T14:08:16.000000Z","updated_at":"2025-05-11T14:08:16.000000Z"},{"id":5,"name":"MySQL","slug":"mysql","created_at":"2025-05-11T14:08:16.000000Z","updated_at":"2025-05-11T14:08:16.000000Z"},{"id":6,"name":"Gitara","slug":"gitara","created_at":"2025-05-11T14:08:16.000000Z","updated_at":"2025-05-11T14:08:16.000000Z"}]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/posts/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the post.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/posts
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Must not be greater than 255 characters.'
        required: true
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      slug:
        name: slug
        description: 'Must not be greater than 255 characters.'
        required: true
        example: 'n'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      content:
        name: content
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      category_id:
        name: category_id
        description: 'The <code>id</code> of an existing record in the categories table.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      tag_ids:
        name: tag_ids
        description: ''
        required: false
        example:
          - architecto
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      title: b
      slug: 'n'
      content: architecto
      category_id: 16
      tag_ids:
        - architecto
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/posts/comment
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      post_id:
        name: post_id
        description: 'The <code>id</code> of an existing record in the posts table.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      content:
        name: content
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      post_id: 16
      content: architecto
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/posts/like
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      post_id:
        name: post_id
        description: 'The <code>id</code> of an existing record in the posts table.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      post_id: 16
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/users
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":200,"success":true,"message":"Success","data":[{"id":4,"name":"Goran Zoran","email":"goranzoran@gmail.com","avatar":"storage\/images\/IMG_1801.jpg","posts_count":1,"avatar_url":"http:\/\/localhost\/storage\/images\/IMG_1801.jpg"},{"id":3,"name":"b","email":"zbailey@example.net","avatar":"","posts_count":0,"avatar_url":"http:\/\/localhost\/"},{"id":2,"name":"Dragana Zdravkovic","email":"zdravkovic.dragana@gmail.com","avatar":"","posts_count":0,"avatar_url":"http:\/\/localhost\/"},{"id":1,"name":"Nikola Zdravkovic","email":"zdravkoovic.nikola@gmail.com","avatar":"storage\/images\/DSC_0563.jpg","posts_count":1,"avatar_url":"http:\/\/localhost\/storage\/images\/DSC_0563.jpg"}]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/users/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":200,"success":true,"message":"Success","data":{"id":1,"name":"Nikola Zdravkovic","email":"zdravkoovic.nikola@gmail.com","avatar":"storage\/images\/DSC_0563.jpg","posts_count":1,"avatar_url":"http:\/\/localhost\/storage\/images\/DSC_0563.jpg"}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
